{
  "version": 3,
  "file": "material-file.component.js",
  "sources": [
    "ng://angular2-json-schema-form/src/lib/src/framework-library/material-design-framework/material-file.component.ts"
  ],
  "sourcesContent": [
    "import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  selector: 'material-file-widget',\n  template: `\n    <label for=\"file-upload\" class=\"custom-file-upload\">\n      <i class=\"fa fa-cloud-upload\"></i> Upload {{options?.title}}\n    </label>\n    <input type=\"file\" id=\"file-upload\" accept=\"image/jpg, image/gif, image/jpeg, image/png\" (change)=\"onFileChanged($event)\">\n    <span> {{ selectedFileName }}</span>\n  `,\n  styles: [`\n    input[type=\"file\"] {\n      display: none;\n    }\n    .custom-file-upload {\n        border: 1px solid #ccc;\n        display: inline-block;\n        padding: 6px 12px;\n        cursor: pointer;\n    }\n  `]\n})\nexport class MaterialFileComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  selectedFileName: string;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n\n  onFileChanged(event) {\n    const selectedFile = event.target.files[0];\n    this.selectedFileName = selectedFile.name;\n    this.getBase64(selectedFile).then(f => this.jsf.updateValue(this, f));\n  }\n\n  getBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  }\n\n}\n"
  ],
  "names": [],
  "mappings": "AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAU,MAAM,eAAe,CAAC;AAGzD,OAAO,EAAE,qBAAqB,EAAE,MAAM,gCAAgC,CAAC;;AAyBvE,MAAM;IAYJ,YACU,GAA0B;QAA1B,QAAG,GAAH,GAAG,CAAuB;+BATlB,KAAK;4BACR,KAAK;KASf;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,IAAI,EAAE,CAAC;QAC7C,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;KAClC;IAED,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KAChD;IAED,aAAa,CAAC,KAAK;QACjB,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,IAAI,CAAC;QAC1C,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;KACvE;IAED,SAAS,CAAC,IAAI;QACZ,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAChC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAC3B,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC7C,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACzC,CAAC,CAAC;KACJ;;;YA3DF,SAAS,SAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,QAAQ,EAAE;;;;;;GAMT;gBACD,MAAM,EAAE,CAAC;;;;;;;;;;GAUR,CAAC;aACH;;;;YAxBQ,qBAAqB;;;2BAiC3B,KAAK;4BACL,KAAK;0BACL,KAAK"
}
