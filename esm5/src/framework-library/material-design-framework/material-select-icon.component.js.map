{
  "version": 3,
  "file": "material-select-icon.component.js",
  "sources": [
    "ng://angular2-json-schema-form/src/lib/src/framework-library/material-design-framework/material-select-icon.component.ts"
  ],
  "sourcesContent": [
    "import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { buildTitleMap, isArray } from '../../shared';\n\n@Component({\n  selector: 'material-select-icon-widget',\n  template: `\n    <mat-form-field\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatPlaceholder || (options?.notitle ? 'never' : 'auto')\"\n      [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <mat-select\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.name]=\"controlName\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [id]=\"'control' + layoutNode?._id\"\n        [multiple]=\"options?.multiple\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [value]=\"controlValue\"\n        (blur)=\"options.showErrors = true\"\n        (selectionChange)=\"updateValue($event)\"\n        [(ngModel)]=\"controlValue\">\n        <mat-select-trigger *ngIf=\"controlValue\">\n          <i class=\"fa align-middle\" [ngClass]=\"controlValue\"></i>\n          <span class=\"icon-name\">{{ controlValue }}</span>\n        </mat-select-trigger>\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <mat-option\n            [value]=\"selectItem\">\n            <i class=\"fa align-middle\" [ngClass]=\"selectItem\"></i>\n            <span class=\"icon-name\">{{ selectItem }}</span>\n          </mat-option>\n        </ng-template>\n      </mat-select>\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n\n    .icon-name {\n      margin-left:5px;\n    }`\n  ],\n})\nexport class MaterialSelectIconComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  selectList: any[] = [];\n  isArray = isArray;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  defaultIcons = [\n    \"fa-address-book\",\n    \"fa-archive\",\n    \"fa-car\",\n    \"fa-camera-retro\",\n    \"fa-cloud\",\n    \"fa-bathtub\",\n    \"fa-bullhorn\",\n    \"fa-comments\",\n    \"fa-clone\",\n    \"fa-columns\",\n    \"fa-code\",\n    \"fa-eraser\",\n    \"fa-eject\",\n    \"fa-desktop\",\n    \"fa-fire\",\n    \"fa-cube\",\n    \"fa-list-alt\",\n    \"fa-microchip\",\n    \"fa-fax\",\n    \"fa-flag\",\n    \"fa-print\",\n    \"fa-power-off\",\n    \"fa-bell\"\n  ]\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.options.enum ? this.selectList = this.defaultIcons.concat(this.options.enum) : this.selectList = this.defaultIcons;\n    if(this.controlValue && this.selectList.indexOf(this.controlValue) === -1) {\n      this.selectList.push(this.controlValue);\n    }\n    this.jsf.initializeControl(this, !this.options.readonly);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, event.value);\n  }\n}\n"
  ],
  "names": [],
  "mappings": "AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAU,MAAM,eAAe,CAAC;AAGzD,OAAO,EAAE,qBAAqB,EAAE,MAAM,gCAAgC,CAAC;AACvE,OAAO,EAAiB,OAAO,EAAE,MAAM,cAAc,CAAC;AAqDtD,MAAM;IAuCJ,YACU,GAA0B;QAA1B,QAAG,GAAH,GAAG,CAAuB;+BApClB,KAAK;4BACR,KAAK;0BAEA,EAAE;uBACZ,OAAO;4BAKF;YACb,iBAAiB;YACjB,YAAY;YACZ,QAAQ;YACR,iBAAiB;YACjB,UAAU;YACV,YAAY;YACZ,aAAa;YACb,aAAa;YACb,UAAU;YACV,YAAY;YACZ,SAAS;YACT,WAAW;YACX,UAAU;YACV,YAAY;YACZ,SAAS;YACT,SAAS;YACT,aAAa;YACb,cAAc;YACd,QAAQ;YACR,SAAS;YACT,UAAU;YACV,cAAc;YACd,SAAS;SACV;KAII;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,IAAI,EAAE,CAAC;QAC7C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QACxH,EAAE,CAAA,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1E,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACzC;QACD,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;YACnF,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;SACrD;KACF;IAED,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;KACzC;;;YA7GF,SAAS,SAAC;gBACT,QAAQ,EAAE,6BAA6B;gBACvC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uDAsC2C;gBACrD,MAAM,EAAE,CAAC;;;;;;;MAOL;iBACH;aACF;;;;YArDQ,qBAAqB;;;2BA+D3B,KAAK;4BACL,KAAK;0BACL,KAAK"
}
